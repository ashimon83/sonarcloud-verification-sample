name: Monorepo SonarQube Analysis
on:
  push:
    branches:
      - main
    paths:
      - 'demo/**'
      - 'nextjs-frontend/**'
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:
    inputs:
      scan_target:
        description: '分析対象（all/backend/frontend）'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - backend
          - frontend
jobs:
  backend-scan:
    name: Backend Analysis
    if: github.event_name != 'workflow_dispatch' || github.event.inputs.scan_target == 'all' || github.event.inputs.scan_target == 'backend'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'
          cache: 'gradle'
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v2
        continue-on-error: true
        id: validate
      - name: Retry Gradle wrapper validation
        uses: gradle/wrapper-validation-action@v2
        if: steps.validate.outcome == 'failure'
      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar-backend
          restore-keys: ${{ runner.os }}-sonar-backend
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        working-directory: ./demo
      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          cd demo
          ./gradlew build test jacocoTestReport sonarqube --info --stacktrace

  frontend-scan:
    name: Frontend Analysis
    if: github.event_name != 'workflow_dispatch' || github.event.inputs.scan_target == 'all' || github.event.inputs.scan_target == 'frontend'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: nextjs-frontend/package-lock.json
      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar-frontend
          restore-keys: ${{ runner.os }}-sonar-frontend
      - name: Install dependencies
        run: |
          cd nextjs-frontend
          npm ci
      - name: Run tests with coverage
        run: |
          cd nextjs-frontend
          npx vitest run --coverage
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: nextjs-frontend/
          args: >
            -Dsonar.projectKey=sonarcloud-verification-sample-frontend
            -Dsonar.organization=ashimon83
            -Dsonar.host.url=https://sonarcloud.io
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
            -Dsonar.sources=src
            -Dsonar.tests=src
            -Dsonar.test.inclusions=**/*.test.ts,**/*.test.tsx
            -Dsonar.coverage.exclusions=**/*.test.ts,**/*.test.tsx,**/*.stories.tsx